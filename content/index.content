<h1>mantis</h1>
<h2>mantis</h2>
<h3>mantis</h3>
<h4>mantis</h4>
<h5>mantis</h5>
<h6>mantis</h6>

<p>
	sd f sdf sdf s dfsd f sdf sd fsd fsd f df df sdf df sf sf sd ad g  g gw e f sdf sdf sd fs d fsd fsd f df df sdf df sf sf sd ad g  g gw e f sdf sdf sd fs gs d f sdf sdf sf sd fs df sd fs df sdf sd f sdf sdf s dfsd f sdf sd fsd fsd f df df sdf df sf sf sd ad g  g gw e f sdf sdf df sd fs d fsd fsd f df df sdf df sf sf sd ad g  g gw e f sdf sdf sd fs gs d f sdf sdf sf sd fs df sd fs df sdf sd f sdf sdf s dfsd f sdf sd fsd fsd f df df sdf df sf sf sd ad g  g gw e f sdf s
</p>

<div id="editor-container" align="center">
<div id="editor-content" class="microlight pre-wrap" contenteditable spellcheck="false"></div>
<div id="editor" class="pre-wrap" contenteditable spellcheck="false" onkeyup="redraw_editor()" onkeydown="redraw_editor()">//edit me</div>
</div>


<pre class="microlight">
using namespace std;

int main() {
	std::cout << "hello, world!" << std::endl;

	for(auto i=0; i<j -123423423410; ++i) {
		for(std::size_t j=12; j>= 0; --j)
			{std::cout << "lolo there" << std::endl;}
	}

	return 0;
}


array {{{}}}
array {{{}}}
array {+{-{}*}!}
p::+ { color: red }
{<div><span>hello {{{{{{}}}}}}   </span></div>}

"this is a string"
'c'
</pre>

<pre class="microlight linenums">
<!doctype html>
<html lang="en">
	<head>
		\@input("templates/head.template")
	</head>

	<body>
		<div align="center">
			\@input("templates/menu.template")

			<div id="content">
				\@content

				\@//input("templates/footer.template")
			</div>
		</div>

		<script defer
			type = "text/javascript" 
			src  = "\@pathto(output/assets/js/bundled.js)"
		></script>
	</body>
</html>
</pre>